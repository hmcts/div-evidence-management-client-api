buildscript {
    ext {
        springBootVersion = '1.5.12.RELEASE'
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins {
    id 'application'
    id 'org.springframework.boot' version'1.5.12.RELEASE'
    id 'io.spring.dependency-management' version '1.0.3.RELEASE'
    id 'org.owasp.dependencycheck' version '3.1.2'
    id 'org.sonarqube' version '2.6.2'
    id 'jacoco'
    id 'pmd'
    id 'info.solidsoft.pitest' version '1.3.0'
}

group = 'uk.gov.hmcts.reform.divorce'
version = '3.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
jar.archiveName = 'div-evidence-management-client-api.jar'

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}


sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/integrationTest/java')
        }
        resources {
            srcDir('src/integrationTest/resources')
        }
    }
}

dependencies {
    integrationTestCompile(sourceSets.test.output)
}

mainClassName = 'uk.gov.hmcts.reform.emclient.application.EvidenceManagementClientApplication'

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

repositories {
    mavenLocal()
    jcenter()

    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

distributions {
  main {
    contents {
      from(file("$projectDir/lib/AI-Agent.xml")) {
        into "lib"
      }
    }
  }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.emclient.*']
    excludedClasses = ['uk.gov.hmcts.reform.emclient.health.*', 'uk.gov.hmcts.reform.emclient.configuration.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'
}

def versions = [

        commonsIo: '2.5',
        commonsLang3: '3.0',
        hibernate: '6.0.5.Final',
        jacksonCore: '2.9.5',
        javaxValidation: '2.0.0.Final',
        jaywayJsonPath: '2.2.0',
        puppyCrawl: '7.6',
        reformsJavaLogging: '2.0.2',
        reformsHttpProxySpringBootAutoconfigure: '1.1.0',
        serviceTokenGenerator: '0.6.0',
        sprintBoot: '1.5.12.RELEASE',
        springCloud: '1.2.5.RELEASE',
        springRetry: '1.2.1.RELEASE',
        springHateoas: '0.23.0.RELEASE',
        springPluginCore: '1.2.0.RELEASE',
        wiremockVersion: '2.8.0'
]

dependencies {

    
    //integration test
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-core', version: '1.5.2'
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: '1.5.2'
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '1.5.2'
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: '1.5.2'
    integrationTestCompile group: 'net.serenity-bdd', name: 'serenity-cucumber', version:'1.1.3'
    integrationTestCompile group: 'junit', name: 'junit', version: '4.12'
    integrationTestCompile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.1'
    integrationTestCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.3'
    integrationTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    integrationTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    integrationTestCompile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    integrationTestCompile group: 'uk.gov.hmcts.reform', name:'service-auth-provider-client', version: '0.6.0'
    integrationTestCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    integrationTestCompile group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
    integrationTestCompile group: 'org.skyscreamer', name:'jsonassert', version: '1.2.3'
    integrationTestCompile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.1'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonCore
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jacksonCore
    compile group: 'com.jayway.jsonpath', name: 'json-path-assert', version: versions.jaywayJsonPath
    compile group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    compile group: 'javax.validation', name: 'validation-api', version: versions.javaxValidation
    compile group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    compile group: 'org.hibernate', name: 'hibernate-validator', version: versions.hibernate

    compile (group: 'uk.gov.hmcts.reform', name:'service-auth-provider-client', version: versions.serviceTokenGenerator){
        exclude group: 'io.reactivex', module: 'rxnetty'
        exclude group: 'io.reactivex', module: 'rxnetty-servo'
        exclude group: 'io.reactivex', module: 'io.reactivex'
        exclude group: 'io.reactivex', module: 'rxnetty-contexts'
    }
    
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.sprintBoot
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
    compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '5.1'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.sprintBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: versions.sprintBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.sprintBoot
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-hystrix', version: versions.springCloud
    compile group: 'org.springframework.retry', name: 'spring-retry', version: versions.springRetry
    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: versions.springHateoas
    compile group: 'org.springframework.plugin', name: 'spring-plugin-core', version: versions.springPluginCore
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.reformsJavaLogging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: versions.reformsJavaLogging
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-httpcomponents', version: versions.reformsJavaLogging
    compile group: 'uk.gov.hmcts.reform', name: 'http-proxy-spring-boot-autoconfigure', version: versions.reformsHttpProxySpringBootAutoconfigure

    testCompile group: 'com.github.tomakehurst', name:'wiremock', version: versions.wiremockVersion
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.sprintBoot) {
        exclude(module: 'commons-logging')
    }
}

test {
    exclude '**/HealthCheckFunctionalTest.class'
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    useJUnit {
        includeCategories 'uk.gov.hmcts.reform.emclient.category.SmokeTest'
    }
}


task functional(type: Test, description: 'Runs the functional tests', group: 'Verification') {
        setTestClassesDirs(sourceSets.integrationTest.output.classesDirs)
        setClasspath(sourceSets.integrationTest.runtimeClasspath)
}

task printVersion {
    doLast {
        print project.version
    }
}

task developAddReleaseSuffix() {
    version = "${version}-SNAPSHOT"
}

def sonarExclusions = [
        '**uk/gov/hmcts/reform/emclient/exception/*',
        '**uk/gov/hmcts/reform/emclient/configuration/*',
        '**uk/gov/hmcts/reform/emclient/response/*',
        '**uk/gov/hmcts/reform/emclient/service/UploadRequestBuilder.java',
        '**uk/gov/hmcts/reform/emclient/exception/TemporaryStoreFailureException.java',
        '**uk/gov/hmcts/reform/emclient/application/EvidenceManagementClientApplication.java'
]

sonarqube {
    properties {
        property "sonar.projectKey", "DivorceEvidenceManagementClientApi"
        property "sonar.projectName", "Divorce :: Evidence Management Client API"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/functional.exec"
        property "sonar.exclusions", sonarExclusions.join(", ")
    }
}

task addReleaseSuffixToDevelop() {
    version = "${version}-SNAPSHOT"
}

jacocoTestReport {
    executionData(test, functional)

    reports {
        xml {
            enabled true
        }

        html {
            enabled true
        }
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

def debug = System.getProperty("debug")
run {
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5010']
    }
}